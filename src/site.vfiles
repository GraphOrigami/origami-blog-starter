# Create a virtual folder called `inlined` that's a deep copy of the `markdown`
# folder, with any expressions in {{ ... }} curly braces evaluated and inlined.
# This lets individual markdown pages like markdown/index.md contain expressions
# that do useful things, like embed a list of the blog posts.
inlined = mapDeep(markdown, inline, extension='md'):

# Create a virtual folder called `html` that's a deep copy of the `inlined`
# folder, with all markdown files converted to HTML fragments.
html = mapDeep(inlined, mdHtml, extension='mdâ†’html'):

# Regular pages sit at the top level of the virtual `html` folder.
# Those pages are rendered with the page.ori template.
regularPages = map(html, page.ori):

# The posts sit in the `posts` subfolder of the virtual `html` folder.
# Sort the posts by date, which will end up with the oldest first.
oldestFirst = sortBy(html/posts, =./date):

# Reverse the order so the newest posts are first.
newestFirst = reverse(oldestFirst):

# Post pages use the postPage.ori template to become HTML. To show newest posts
# first, change `oldestFirst` below to `newestFirst`.
postPages = map(oldestFirst, postPage.ori, extension='html'):

# The virtual `public` folder is the final site.
public:
  index.html = regularPages/index.html:
  about:
    index.html = regularPages/about.html:
  posts = merge(postPages, this):
    index.html = regularPages/posts.html:
  styles.css = src/styles.css:
