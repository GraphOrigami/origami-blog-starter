{
  // Define a pipeline that processes the folder of markdown content.
  processed = content
    // Parse markdown to HTML and replace `.md` extension with `.html`.
    → @map(@mdHtml)
    // Rename files to slugs and add a `date` field parsed from the filename.
    → @map({
      key: (post, fileName) => @slug(fileName)
      value: (post, fileName) => @merge(
        post,
        @makeParser("^(?<date>\\d\\d\\d\\d-\\d\\d-\\d\\d) ")(fileName)
      )
    })
    // Add next/previous keys (do this before sorting).
    → @addNextPrevious
    // Sort in reverse chronological order.
    → @reverse
  
  // Turn the posts into a feed.
  feed = feed.ori(processed)

  // Construct the site's tree of public resources to deploy.
  public = {
    // Stylesheet and images
    assets

    // Index page lists all posts
    index.html = index.ori(@mdHtml(index.md), processed)

    // About page
    about.html = page.ori(@mdHtml(about.md))

    // The posts area contains one page for each post
    posts = @map(processed, postPage.ori)

    // Feeds
    feed.json = @json(feed)
    rss.xml = @rss(feed)
  }

  // From the above, we return the `public` tree as the program's output.
}/public
